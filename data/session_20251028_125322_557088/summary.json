{
    "timestamp": "20251028_125353",
    "audio_text": "oh ben accent oh open exit",
    "screen_text_samples": [
        "File Edit Selection View Go Run\n\nTerminal Help\n\n\u20ac > [ Q AGI Assistant\n\noO\n\nEXPLORER\n\n\u00ae pattern_detector.py\n\n\u00ae mainpy || {} summaryjson \u00ae summarizer.py \u00ae automation_manager.py\n\n> OPEN EDITORS src > \u00ae main.py > \u00a9 process_and_analyze\nQ > SONARQUBE SETUP: GET START... 1 import os, sys, threading, time s\n> SONARQUBESETUP:CONNECTE..| 2 from dotenv import load_dotenv\n5 SMAnae An: WS 3 from storage manager import StorageManager z\nye S 4 from recorder import record_audio_wav, record_screen_mp4, show_mic_symbol\n7 SONARQUES SETUP: HELEAND == 5 from summarizer import Summarizer\n5S UAGEASSISTANT! 6 from automation_manager import AutomationManager\n& > idea 7\n> build 8  # If frozen (PyInstaller exe), make project root the parent of dist/\nAL] 5 consg 9 if getattr(sys, \u201cfrozen\u201d, False):\nBihan 10 exe_dir = os.path.dirname(sys.executable) -\n\u2014 . uy project_root = os.path.dirname(exe_dir)\nwW Jeon wera | 9 os.chdir(os.path.dirname(sys.executable))\n> sessioni20251028\u00b012073; 2B os.environ[\"PATH\"] = sys. MEIPASS + os.pathsep + os.environ.get(\"PATH\", \"\")\n0) > session_20251028_12175. rn\n> session_20251028_12200. 15 load_dotenv(dotenv_path=\"config/.env\" if os.path.exists(\"config/.env\") else \u201c.env\")\n> session_20251028_12211.. 16\n> session 20251028 12225...) 17 _ SESSTON_DURATION = int (os.getenv(\"SESSION_DURATION\", 10))\nReet een 18 AUDIO _SAMPLERATE = int(os.getenv(\"AUDIO SAMPLERATE\u2122, 16000))\nee - a 19 FPS = int(os.getenv(\"FPS\", 10))\n> session 2025102812322... 59 pata PATH = os.getenv(\"DATA PATH\", \u201cdata\u201d)\n> session_20251028_12523... 21  MAX_SESSIONS = int(os.getenv(\u201cMAX_SESSIONS\", 10))\n> session _20251028_12532...| | 22 | VOSK_MODEL_PATH = os.getenv(\"VOSK_MODEL_PATH\", \u201cmodels/vosk_model\")\nada PROBLEMS OUTPUT \u00a9 DEBUGCONSOLE |TERMINAL| PORTS = SONARQUBE B] python + v [ce\n> logs\n> models Ps_C:\\Users\\DEVASISH\\PycharmProjects\\AGI_Assistant1> python src/main.py\n[INFO] Created new session folder: data\\session_20251028 125237_993524 f\nME [INFO] Audio saved: data\\session_20251028 125237_993524\\audio.wav =\n> _pycache_ [INFO] Screen saved: data\\session_20251028 125237_993524\\screen.mp4\nSores [INFO] vosk model loaded.\n\u00a9 arumatoariinanergy [INFO] Summary saved for data\\session 20251028 125237_993524\n\u201d INFO] Summary JSON generated at: data\\session_20251028 125237_993524\\summary.json\nae ry B 1 = ss ry-Jj\n\u00ae mainpy [INFO] Detected actions: [{'action': \u2018Opened File Explorer\u2019, \u2018source\u2019: \u2018audio'}, {\u2018action': \u2018Interacted with screen\u2019, \u2018source\u2019: \u2018ocr'}]\n\u00ae mic_popup.py [INFO] Completed session: data\\session_2@251028_125237_993524\n(2) \u00ae pattern_detector.py [INFO] Exiting in 3s... \u2019\n\u00ae recorderpy \u00a9 PS C:\\Users\\DEVASISH\\PycharmProjects\\AGI_Assistant1> python src/main.py\n7 iE = [INFO] === AGI Assistant Started\n$33 ovum INFO] Created new session folder: data\\session_20251028_125322_557088\n> TIMELINE\nX @o0A0 \u00a9 SonarQube SonarQube focus: new code Ln 40, Col 44 Spaces:4 UTF-8 CRLF & = 3.10.5(venv) @Golive Otabnine basic \u00ae \u00a9 Prettier",
        "File Edit Selection View Go\n\nRun Terminal Help \u20ac7[ Q AGI_Assistant1 ) tay\n\nce oe) - a\n\nEXPLORER\n\n\u00ae pattern_detector.py \u00ae mainpy || {} summaryjson \u00ae summarizer.py \u00ae automation_manager.py\n\n@\n\n\u00ae\n&\n\n> OPEN EDITORS\n\nsrc > @ main.py > \u00a9 process_and_analyze\n\n> SONARQUBE SETUP: GET START...\n\n> SONARQUBE SETUP: CONNECTE...\n\n> SONARQUBE SETUP: RULES\n\n> SONARQUBE SETUP: HELP AND ...\n\n AGI_ASSISTANT1\n\n> idea\n\n> build\n\n> config\n\n~ data\nsession_20251028_12053..\n\nsession_20251028_12073..\nsession_20251028_12175..\n\nsession_20251028_12200..\nsession_20251028_12211..\n\nsession_20251028_ 12225...\nsession_20251028_12313...\nsession_20251028_12322...\nsession_20251028_ 12523...\n\nVvuvvvvvv vy\n\nsession_20251028_12532...\n> dist\n> logs\n\n> models\n\n\u00ae automation_manager.py\n\u00ae mainpy\n\n\u00ae mic_popup.py\n\n\u00ae pattern_detector.py\n\n\u00ae recorder.py\n\n1 import os, sys, threading, time\n2 from dotenv import load_dotenv\n\n3 from storage_manager import StorageManager\n\n4 from recorder import record_audio wav, record_screen_mp4, show_mic_symbol\n5 from summarizer import Summarizer\n\n6 from automation_manager import AutomationManager\n\n7\n8\n9\n\n# If frozen (PyInstaller exe), make project root the parent of dist/\nif getattr(sys, \"frozen\", False):\n\n10 exe_dir = os.path.dirname(sys executable)\ncal project_root = os.path.dirname(exe_dir)\n\n12 os. chdir(os.path.dirname(sys.executable) )\n\n13 os.environ[\"PATH\"] = sys._MEIPASS + os.pathsep + os.environ.get(\"PATH\",\n\n14\n\n15 load_dotenv(dotenv_path=\"config/.env\" if os.path.exists(\"config/.env\") else \".env\")\n16\n\n17 SESSION_DURATION\n\nint (os.getenv(\"SESSION DURATION\", 10))\n\n18 AUDIO _SAMPLERATE = int(os.getenv(\"AUDIO SAMPLERATE\u201d, 16000))\n\n19 FPS = int(os.getenv(\"FPS\", 10))\n\n2@ \u2014DATA_PATH = os.getenv(\"DATA_PATH\", \u201cdata\u201d)\n\n21 MAX _SESSIONS = int(os.getenv(\"MAX SESSIONS\u201d, 10))\n\n22 VOSK_MODEL_PATH = os.getenv(\"VOSK_MODEL_PATH\", \u201cmodels/vosk_model\u201d)\n\nPROBLEMS \u00a9 OUTPUT  DEBUGCONSOLE |TERMINAL| PORTS \u2014 SONARQUBE\n\nBJ python + v @- | 03\n\nPs_C:\\Users\\DEVASISH\\PycharmProjects\\AGI_Assistant1> python src/main.py\n\n> OUTLINE\n\n> TIMELINE\n\n[INFO] Created new session folder: data\\session_20251028 125237_993524\n[INFO] Audio saved: data\\session_20251028_125237_993524\\audio.wav\n[INFO] Screen saved: data\\session_20251028 125237_993524\\screen.mp4\n[INFO] Vosk model loaded.\n[INFO] Summary saved for data\\session_20251028 125237_993524\n[INFO] Summary JSON generated at: data\\session_20251028 125237_993524\\summary.json\n[INFO] Detected actions: [{\u2018action': \u2018Opened File Explorer\u2019, \u2018source\u2019: \u2018audio'}, {'action': \u2018Interacted with screen\u2019, \u2018source\u2019: \u2018ocr'}]\n[INFO] Completed session: data\\session_20251028_125237_993524\n[INFO] Exiting in 3s...\n\u00a9 PS C:\\Users\\DEVASISH\\PycharmProjects\\AGI_Assistant1> python src/main.py\n[INFO] === AGI Assistant Started\ni\u201d Created new session folder: data\\session_20251028_125322_557088\n\nx\n\n@0A0_ \u00a9 SonarQube \u2014SonarQube focus: new code UTF-8 CRLF {} Python & 3.10.5 (venv)\n\n@Golive tabnine basic \u00ae \u00a9 Prettier",
        "File Edit Selection View Go\n\nRun Terminal Help \u20ac7[ Q AGI_Assistant1 ) tay\n\nce oe) - a\n\nEXPLORER\n\n\u00ae pattern_detector.py \u00ae mainpy || {} summaryjson \u00ae summarizer.py \u00ae automation_manager.py\n\n@\n\n\u00ae\n&\n\n> OPEN EDITORS\n\nsrc > @ main.py > \u00a9 process_and_analyze\n\n> SONARQUBE SETUP: GET START...\n\n> SONARQUBE SETUP: CONNECTE...\n\n> SONARQUBE SETUP: RULES\n\n> SONARQUBE SETUP: HELP AND ...\n\n AGI_ASSISTANT1\n\n> idea\n\n> build\n\n> config\n\n~ data\nsession_20251028_12053..\n\nsession_20251028_12073..\nsession_20251028_12175..\n\nsession_20251028_12200..\nsession_20251028_12211..\n\nsession_20251028_ 12225...\nsession_20251028_12313...\nsession_20251028_12322...\nsession_20251028_ 12523...\n\nVvuvvvvvv vy\n\nsession_20251028_12532...\n> dist\n> logs\n\n> models\n\n\u00ae automation_manager.py\n\u00ae mainpy\n\n\u00ae mic_popup.py\n\n\u00ae pattern_detector.py\n\n\u00ae recorder.py\n\n1 import os, sys, threading, time\n2 from dotenv import load_dotenv\n\n3 from storage_manager import StorageManager\n\n4 from recorder import record_audio wav, record_screen_mp4, show_mic_symbol\n5 from summarizer import Summarizer\n\n6 from automation_manager import AutomationManager\n\n7\n8\n9\n\n# If frozen (PyInstaller exe), make project root the parent of dist/\nif getattr(sys, \"frozen\", False):\n\n10 exe_dir = os.path.dirname(sys executable)\ncal project_root = os.path.dirname(exe_dir)\n\n12 os. chdir(os.path.dirname(sys.executable) )\n\n13 os.environ[\"PATH\"] = sys._MEIPASS + os.pathsep + os.environ.get(\"PATH\",\n\n14\n\n15 load_dotenv(dotenv_path=\"config/.env\" if os.path.exists(\"config/.env\") else \".env\")\n16\n\n17 SESSION_DURATION\n\nint (os.getenv(\"SESSION DURATION\", 10))\n\n18 AUDIO _SAMPLERATE = int(os.getenv(\"AUDIO SAMPLERATE\u201d, 16000))\n\n19 FPS = int(os.getenv(\"FPS\", 10))\n\n2@ \u2014DATA_PATH = os.getenv(\"DATA_PATH\", \u201cdata\u201d)\n\n21 MAX _SESSIONS = int(os.getenv(\"MAX SESSIONS\u201d, 10))\n\n22 VOSK_MODEL_PATH = os.getenv(\"VOSK_MODEL_PATH\", \u201cmodels/vosk_model\u201d)\n\nPROBLEMS \u00a9 OUTPUT  DEBUGCONSOLE |TERMINAL| PORTS \u2014 SONARQUBE\n\nBJ python + v @- | 03\n\nPs_C:\\Users\\DEVASISH\\PycharmProjects\\AGI_Assistant1> python src/main.py\n\n> OUTLINE\n\n> TIMELINE\n\n[INFO] Created new session folder: data\\session_20251028 125237_993524\n[INFO] Audio saved: data\\session_20251028_125237_993524\\audio.wav\n[INFO] Screen saved: data\\session_20251028 125237_993524\\screen.mp4\n[INFO] Vosk model loaded.\n[INFO] Summary saved for data\\session_20251028 125237_993524\n[INFO] Summary JSON generated at: data\\session_20251028 125237_993524\\summary.json\n[INFO] Detected actions: [{\u2018action': \u2018Opened File Explorer\u2019, \u2018source\u2019: \u2018audio'}, {'action': \u2018Interacted with screen\u2019, \u2018source\u2019: \u2018ocr'}]\n[INFO] Completed session: data\\session_20251028_125237_993524\n[INFO] Exiting in 3s...\n\u00a9 PS C:\\Users\\DEVASISH\\PycharmProjects\\AGI_Assistant1> python src/main.py\n[INFO] === AGI Assistant Started\ni\u201d Created new session folder: data\\session_20251028_125322_557088\n\nx\n\n@0A0_ \u00a9 SonarQube \u2014SonarQube focus: new code UTF-8 CRLF {} Python & 3.10.5 (venv)\n\n@Golive tabnine basic \u00ae \u00a9 Prettier",
        "File Edit Selection View Go\n\nRun Terminal Help \u20ac7[ Q AGI_Assistant1 ) tay\n\nce oe) - a\n\nEXPLORER\n\n\u00ae pattern_detector.py \u00ae mainpy || {} summaryjson \u00ae summarizer.py \u00ae automation_manager.py\n\n@\n\n\u00ae\n&\n\n> OPEN EDITORS\n\nsrc > @ main.py > \u00a9 process_and_analyze\n\n> SONARQUBE SETUP: GET START...\n\n> SONARQUBE SETUP: CONNECTE...\n\n> SONARQUBE SETUP: RULES\n\n> SONARQUBE SETUP: HELP AND ...\n\n AGI_ASSISTANT1\n\n> idea\n\n> build\n\n> config\n\n~ data\nsession_20251028_12053..\n\nsession_20251028_12073..\nsession_20251028_12175..\n\nsession_20251028_12200..\nsession_20251028_12211..\n\nsession_20251028_ 12225...\nsession_20251028_12313...\nsession_20251028_12322...\nsession_20251028_ 12523...\n\nVvuvvvvvv vy\n\nsession_20251028_12532...\n> dist\n> logs\n\n> models\n\n\u00ae automation_manager.py\n\u00ae mainpy\n\n\u00ae mic_popup.py\n\n\u00ae pattern_detector.py\n\n\u00ae recorder.py\n\n1 import os, sys, threading, time\n2 from dotenv import load_dotenv\n\n3 from storage_manager import StorageManager\n\n4 from recorder import record_audio wav, record_screen_mp4, show_mic_symbol\n5 from summarizer import Summarizer\n\n6 from automation_manager import AutomationManager\n\n7\n8\n9\n\n# If frozen (PyInstaller exe), make project root the parent of dist/\nif getattr(sys, \"frozen\", False):\n\n10 exe_dir = os.path.dirname(sys executable)\ncal project_root = os.path.dirname(exe_dir)\n\n12 os. chdir(os.path.dirname(sys.executable) )\n\n13 os.environ[\"PATH\"] = sys._MEIPASS + os.pathsep + os.environ.get(\"PATH\",\n\n14\n\n15 load_dotenv(dotenv_path=\"config/.env\" if os.path.exists(\"config/.env\") else \".env\")\n16\n\n17 SESSION_DURATION\n\nint (os.getenv(\"SESSION DURATION\", 10))\n\n18 AUDIO _SAMPLERATE = int(os.getenv(\"AUDIO SAMPLERATE\u201d, 16000))\n\n19 FPS = int(os.getenv(\"FPS\", 10))\n\n2@ \u2014DATA_PATH = os.getenv(\"DATA_PATH\", \u201cdata\u201d)\n\n21 MAX _SESSIONS = int(os.getenv(\"MAX SESSIONS\u201d, 10))\n\n22 VOSK_MODEL_PATH = os.getenv(\"VOSK_MODEL_PATH\", \u201cmodels/vosk_model\u201d)\n\nPROBLEMS \u00a9 OUTPUT  DEBUGCONSOLE |TERMINAL| PORTS \u2014 SONARQUBE\n\nBJ python + v @- | 03\n\nPs_C:\\Users\\DEVASISH\\PycharmProjects\\AGI_Assistant1> python src/main.py\n\n> OUTLINE\n\n> TIMELINE\n\n[INFO] Created new session folder: data\\session_20251028 125237_993524\n[INFO] Audio saved: data\\session_20251028_125237_993524\\audio.wav\n[INFO] Screen saved: data\\session_20251028 125237_993524\\screen.mp4\n[INFO] Vosk model loaded.\n[INFO] Summary saved for data\\session_20251028 125237_993524\n[INFO] Summary JSON generated at: data\\session_20251028 125237_993524\\summary.json\n[INFO] Detected actions: [{\u2018action': \u2018Opened File Explorer\u2019, \u2018source\u2019: \u2018audio'}, {'action': \u2018Interacted with screen\u2019, \u2018source\u2019: \u2018ocr'}]\n[INFO] Completed session: data\\session_20251028_125237_993524\n[INFO] Exiting in 3s...\n\u00a9 PS C:\\Users\\DEVASISH\\PycharmProjects\\AGI_Assistant1> python src/main.py\n[INFO] === AGI Assistant Started\ni\u201d Created new session folder: data\\session_20251028_125322_557088\n\nx\n\n@0A0_ \u00a9 SonarQube \u2014SonarQube focus: new code UTF-8 CRLF {} Python & 3.10.5 (venv)\n\n@Golive tabnine basic \u00ae \u00a9 Prettier"
    ],
    "detected_actions": [
        {
            "action": "Opened File Explorer",
            "source": "audio"
        },
        {
            "action": "Interacted with screen",
            "source": "ocr"
        }
    ],
    "final_action": "Interacted with screen"
}